/// <reference types="react" />
import React from "react";
import { HTMLAttributes } from "react";
declare const defaultProps: {
    speed: number;
    still: boolean;
    thickness: number;
};
declare const secondaryColorDefaultProps: {
    secondaryColor: string;
    speed: number;
    still: boolean;
    thickness: number;
};
type SpinnerProps = HTMLAttributes<SVGElement> & Partial<typeof defaultProps>;
type SecondaryColorSpinnerProps = SpinnerProps & Partial<typeof secondaryColorDefaultProps>;
declare const defaultProps$0: {
    color: string;
    enabled: boolean;
    size: string | number;
    style: React.CSSProperties;
};
type SpinnersProps = Partial<typeof defaultProps$0>;
type SpinnerCircularProps = SpinnersProps & SecondaryColorSpinnerProps;
declare const SpinnerCircular: {
    (props: SecondaryColorSpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerCircularFixedProps = SpinnersProps & SecondaryColorSpinnerProps;
declare const SpinnerCircularFixed: {
    (props: SecondaryColorSpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerCircularSplitProps = SpinnersProps & SecondaryColorSpinnerProps;
declare const SpinnerCircularSplit: {
    (props: SecondaryColorSpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerInfinityProps = SpinnersProps & SecondaryColorSpinnerProps;
declare const SpinnerInfinity: {
    (props: SecondaryColorSpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerDottedProps = SpinnersProps & SpinnerProps;
declare const Component: {
    ({ speed, still, thickness, ...svgProps }: SpinnerProps): JSX.Element;
    defaultProps: {
        speed: number;
        still: boolean;
        thickness: number;
    };
};
declare const SpinnerDotted: {
    (props: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerRoundProps = SpinnersProps & SpinnerProps;
declare const SpinnerRound: {
    (props: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerRoundOutlinedProps = SpinnersProps & SpinnerProps;
declare const SpinnerRoundOutlined: {
    (props: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerRoundFilledProps = SpinnersProps & SpinnerProps;
declare const SpinnerRoundFilled: {
    (props: SpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
type SpinnerDiamondProps = SpinnersProps & SecondaryColorSpinnerProps;
declare const SpinnerRomb: {
    (props: SecondaryColorSpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
declare const SpinnerDiamond: {
    (props: SecondaryColorSpinnerProps): JSX.Element;
    defaultProps: {
        color: string;
        enabled: boolean;
        size: string | number;
        style: React.CSSProperties;
    };
};
export { SpinnerCircularProps, SpinnerCircular, SpinnerCircularFixedProps, SpinnerCircularFixed, SpinnerCircularSplitProps, SpinnerCircularSplit, SpinnerInfinityProps, SpinnerInfinity, SpinnerDottedProps, Component, SpinnerDotted, SpinnerRoundProps, SpinnerRound, SpinnerRoundOutlinedProps, SpinnerRoundOutlined, SpinnerRoundFilledProps, SpinnerRoundFilled, SpinnerDiamondProps, SpinnerRomb, SpinnerDiamond };
